{"ast":null,"code":"var _jsxFileName = \"/Users/liang.wang/Desktop/reactjshookwithfetch/src/App.js\";\nimport React, { Fragment, useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { ...state,\n        isLoading: true,\n        isError: false\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload\n      };\n\n    case 'FETCH_FAILURE':\n      return { ...state,\n        isLoading: false,\n        isError: true\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nconst useDataApi = (initialUrl, initialData) => {\n  const [url, setUrl] = useState(initialUrl);\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData\n  });\n  useEffect(() => {\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({\n        type: 'FETCH_INIT'\n      });\n\n      try {\n        const result = await axios(url);\n\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_SUCCESS',\n            payload: result.data\n          });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_FAILURE'\n          });\n        }\n      }\n    };\n\n    fetchData();\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n  return [state, setUrl];\n};\n\nfunction App() {\n  const [query, setQuery] = useState('redux');\n  const [{\n    data,\n    isLoading,\n    isError\n  }, setUrl] = useDataApi('https://hn.algolia.com/api/v1/search?query=redux', {\n    hits: []\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      setUrl(`http://hn.algolia.com/api/v1/search?query=${query}`);\n      event.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: query,\n    onChange: event => setQuery(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Search\")), isError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \"Something went wrong ...\"), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Loading ...\") : /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, data.hits.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.objectID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: item.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, item.title)))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/liang.wang/Desktop/reactjshookwithfetch/src/App.js"],"names":["React","Fragment","useState","useEffect","useReducer","axios","dataFetchReducer","state","action","type","isLoading","isError","data","payload","Error","useDataApi","initialUrl","initialData","url","setUrl","dispatch","didCancel","fetchData","result","error","App","query","setQuery","hits","event","preventDefault","target","value","map","item","objectID","title"],"mappings":";AAAA,OAAOA,KAAP,IACIC,QADJ,EAEIC,QAFJ,EAGIC,SAHJ,EAIIC,UAJJ,QAKO,OALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,YAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,SAAS,EAAE,IAFR;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGJ,KADA;AAEHG,QAAAA,SAAS,EAAE,KAFR;AAGHC,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,IAAI,EAAEJ,MAAM,CAACK;AAJV,OAAP;;AAMJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGN,KADA;AAEHG,QAAAA,SAAS,EAAE,KAFR;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ;AACI,YAAM,IAAIG,KAAJ,EAAN;AArBR;AAuBH,CAxBD;;AA4BA,MAAMC,UAAU,GAAG,CAACC,UAAD,EAAaC,WAAb,KAA6B;AAC5C,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAACc,UAAD,CAA9B;AAEA,QAAM,CAACT,KAAD,EAAQa,QAAR,IAAoBhB,UAAU,CAACE,gBAAD,EAAmB;AACnDI,IAAAA,SAAS,EAAE,KADwC;AAEnDC,IAAAA,OAAO,EAAE,KAF0C;AAGnDC,IAAAA,IAAI,EAAEK;AAH6C,GAAnB,CAApC;AAMAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,SAAS,GAAG,KAAhB;;AAEA,UAAMC,SAAS,GAAG,YAAY;AAC1BF,MAAAA,QAAQ,CAAC;AAAEX,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;;AAEA,UAAI;AACA,cAAMc,MAAM,GAAG,MAAMlB,KAAK,CAACa,GAAD,CAA1B;;AAEA,YAAI,CAACG,SAAL,EAAgB;AACZD,UAAAA,QAAQ,CAAC;AAAEX,YAAAA,IAAI,EAAE,eAAR;AAAyBI,YAAAA,OAAO,EAAEU,MAAM,CAACX;AAAzC,WAAD,CAAR;AACH;AACJ,OAND,CAME,OAAOY,KAAP,EAAc;AACZ,YAAI,CAACH,SAAL,EAAgB;AACZD,UAAAA,QAAQ,CAAC;AAAEX,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAR;AACH;AACJ;AACJ,KAdD;;AAgBAa,IAAAA,SAAS;AAET,WAAO,MAAM;AACTD,MAAAA,SAAS,GAAG,IAAZ;AACH,KAFD;AAGH,GAxBQ,EAwBN,CAACH,GAAD,CAxBM,CAAT;AA0BA,SAAO,CAACX,KAAD,EAAQY,MAAR,CAAP;AACH,CApCD;;AAsCA,SAASM,GAAT,GAAe;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,OAAD,CAAlC;AACA,QAAM,CAAC;AAAEU,IAAAA,IAAF;AAAQF,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,GAAD,EAA+BQ,MAA/B,IAAyCJ,UAAU,CACrD,kDADqD,EAErD;AAAEa,IAAAA,IAAI,EAAE;AAAR,GAFqD,CAAzD;AAKA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,QAAQ,EAAEC,KAAK,IAAI;AACfV,MAAAA,MAAM,CACD,6CAA4CO,KAAM,EADjD,CAAN;AAIAG,MAAAA,KAAK,CAACC,cAAN;AACH,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAEJ,KAFX;AAGI,IAAA,QAAQ,EAAEG,KAAK,IAAIF,QAAQ,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAd,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAcI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,CADJ,EAkBKrB,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAlBhB,EAoBKD,SAAS,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADM,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,IAAI,CAACgB,IAAL,CAAUK,GAAV,CAAcC,IAAI,iBACf;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,IAAI,EAAED,IAAI,CAAChB,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBgB,IAAI,CAACE,KAAzB,CADJ,CADH,CADL,CAvBR,CADJ;AAkCH;;AAED,eAAeX,GAAf","sourcesContent":["import React, {\n    Fragment,\n    useState,\n    useEffect,\n    useReducer,\n} from 'react';\nimport axios from 'axios';\n\nconst dataFetchReducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_INIT':\n            return {\n                ...state,\n                isLoading: true,\n                isError: false\n            };\n        case 'FETCH_SUCCESS':\n            return {\n                ...state,\n                isLoading: false,\n                isError: false,\n                data: action.payload,\n            };\n        case 'FETCH_FAILURE':\n            return {\n                ...state,\n                isLoading: false,\n                isError: true,\n            };\n        default:\n            throw new Error();\n    }\n};\n\n\n\nconst useDataApi = (initialUrl, initialData) => {\n    const [url, setUrl] = useState(initialUrl);\n\n    const [state, dispatch] = useReducer(dataFetchReducer, {\n        isLoading: false,\n        isError: false,\n        data: initialData,\n    });\n\n    useEffect(() => {\n        let didCancel = false;\n\n        const fetchData = async () => {\n            dispatch({ type: 'FETCH_INIT' });\n\n            try {\n                const result = await axios(url);\n\n                if (!didCancel) {\n                    dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n                }\n            } catch (error) {\n                if (!didCancel) {\n                    dispatch({ type: 'FETCH_FAILURE' });\n                }\n            }\n        };\n\n        fetchData();\n\n        return () => {\n            didCancel = true;\n        };\n    }, [url]);\n\n    return [state, setUrl];\n};\n\nfunction App() {\n    const [query, setQuery] = useState('redux');\n    const [{ data, isLoading, isError }, setUrl] = useDataApi(\n        'https://hn.algolia.com/api/v1/search?query=redux',\n        { hits: [] },\n    );\n\n    return (\n        <Fragment>\n            <form\n                onSubmit={event => {\n                    setUrl(\n                        `http://hn.algolia.com/api/v1/search?query=${query}`,\n                    );\n\n                    event.preventDefault();\n                }}\n            >\n                <input\n                    type=\"text\"\n                    value={query}\n                    onChange={event => setQuery(event.target.value)}\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n\n            {isError && <div>Something went wrong ...</div>}\n\n            {isLoading ? (\n                <div>Loading ...</div>\n            ) : (\n                <ul>\n                    {data.hits.map(item => (\n                        <li key={item.objectID}>\n                            <a href={item.url}>{item.title}</a>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </Fragment>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}